# -*- coding: utf-8 -*-
"""DataModelTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mmf1SiDzIynGH31Hsys3A_x-lhj37xxO
"""

from keras.models import Sequential
from keras.layers import Dense
from keras.models import model_from_json
import numpy
import os
import sys
try:
	#print(os.path.abspath('\files\model_basic.json')+'\files\model_basic.json')
	json_file = open(sys.argv[2], 'r')
	loaded_model_json = json_file.read()
	json_file.close()
	loaded_model = model_from_json(loaded_model_json)
	# load weights into new model
	loaded_model.load_weights(sys.argv[3])
	print("Loaded model from disk")

	import numpy as np
	from keras.preprocessing import image
	#input the location of image inside load_img method
	#target size is the dimension to be which it will be converted
	test_image=image.load_img(sys.argv[1],target_size=(64,64))
	test_image=image.img_to_array(test_image)
	test_image=np.expand_dims(test_image,axis=0)
	result=loaded_model.predict(test_image)
	#train_set.class_indices
	result=result.tolist()
	result=result[0]
	alpha = 65
	#for i in range(1, 24):
		#if (i >= 1 and i <= 9):
			#if (result[i - 1] == 1):
				#print('identified as ' + chr(alpha))
		#elif (i >= 10 and i <= 24):
			#if (result[i - 1] == 1):
				#print('identified as ' + chr(alpha + 1))
		#alpha += 1
	max1=0
	maxloc=-1
	for i in range(0,4):
		if(result[i]>max1):
			max1=result[i]
			maxloc=i
	if(maxloc==0):
		print('A')
	elif(maxloc==1):
		print('B')
	elif(maxloc==2):
		print('C')
	else:
		print('V')
except Exception as e:
	print(e)
		
